diff --git a/dist/tres.js b/dist/tres.js
index 4f4bd852dcd19ecedd39b921ad5df96e417f8254..38dbcca72654e724426b88e52dae3337a2de77d9 100644
--- a/dist/tres.js
+++ b/dist/tres.js
@@ -511,7 +511,12 @@ const { logError: te } = x(), dt = {
         const r = e, n = (i) => {
           var f, u;
           const p = i;
-          i.userData.tres__materialViaProp || ((f = p.material) == null || f.dispose(), p.material = void 0), i.userData.tres__geometryViaProp || ((u = p.geometry) == null || u.dispose(), p.geometry = void 0);
+          // THREE の設計では material は配列の可能性もあり、spine は配列前提の実装になっている
+          // https://github.com/EsotericSoftware/spine-runtimes/blob/4.1/spine-ts/spine-threejs/src/MeshBatcher.ts#L60C8-L60C16
+          // tres は 単数前提の実装になっているため、runtime error が発生する
+          // https://github.com/Tresjs/tres/blob/341faac/src/types/index.ts#L43
+          // https://github.com/Tresjs/tres/blob/341faacb93fd347aced7f1bc7e0484ecbc12e6ce/src/core/nodeOps.ts#L131
+          i.userData.tres__materialViaProp || ((f = p.material) == null || (Array.isArray(f)? f.forEach(item => item.dispose()): f.dispose()), p.material = void 0), i.userData.tres__geometryViaProp || ((u = p.geometry) == null || u.dispose(), p.geometry = void 0);
         }, o = y == null ? void 0 : y.userData.tres__deregisterAtPointerEventHandler, c = y == null ? void 0 : y.userData.tres__deregisterBlockingObjectAtPointerEventHandler, s = (i) => {
           var p, f;
           if (!c)
